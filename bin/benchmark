#!/usr/bin/env ruby

root_dir = File.dirname(ENV['BUNDLE_GEMFILE'])

require 'optparse'
require 'benchmark'

options = {
    :threads     => 1,
    :repetitions => 1,
    :simulations => []
}
optparse = OptionParser.new do |opts|
  opts.banner = 'Usage: benchmark [options]'

  opts.on('-h', '--help', 'Display this screen') do
    puts opts
    exit(0)
  end

  opts.on('-t', '--threads NUM', 'Number of threads per simulation') do |v|
    options[:threads] = v.to_i
  end

  opts.on('-r', '--repetitions NUM', 'Number of repetitions thread') do |v|
    options[:repetitions] = v.to_i
  end

  opts.on('-s', '--simulation NAME', 'Run specified simulation (can be specified more than once)') do |v|
    options[:simulations] << v
  end
end
optparse.parse!

require 'benchmark-extensions'
require 'bme/simulations'

init_file = "#{root_dir}/init.rb"
require init_file if init_file

Dir.glob("#{root_dir}/simulations/*.rb").each { |f| require f }

simulations = BME::Simulation.select { |c| options[:simulations].empty? || options[:simulations].include?(c.name) }

labels = simulations.reduce([]) do |l, simulation_class|
  simulation_class.steps.each do |s|
    l << "#{simulation_class.label}.#{s}"
  end
  l << simulation_class.label
  l
end

aggregator = BME::ReportAggregator.new(labels, :label_width => 40, :precision => 3)

BME::Runner.run(options[:threads], options[:repetitions]) do |runner|
  simulations.each do |simulation_class|
    next if options[:simulation] && simulation_class.name != options[:simulation]
    runner << lambda { |run_id| simulation_class.run(run_id, aggregator) }
  end
end

puts aggregator.stats
